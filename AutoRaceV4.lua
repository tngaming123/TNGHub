--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.8) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=v2(v0(v30,16));if v19 then local v86=v5(v81,v19);v19=nil;return v86;else return v81;end end end);local function v20(v31,v32,v33)if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%(((1640 -(1523 + 114)) -1)^(((v33-(2 -(1 + 0))) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v82-(v82%(569 -(367 + 201))) ;else local v83=(929 -(214 + (1015 -302)))^(v32-(1 + 0)) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (877 -(282 + 595)) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23()local v37=0 -0 ;local v38;local v39;local v40;local v41;while true do if (v37==((953 -(802 + 150)) -0)) then return (v41 * (30800116 -14022900)) + (v40 * (65653 -((85 -53) + 85))) + (v39 * (436 -(67 + 113))) + v38 ;end if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 1 + 3 ;v37=958 -(892 + 65) ;end end end local function v24()local v42=v23();local v43=v23();local v44=1 -0 ;local v45=(v20(v43,1,15 + 5 ) * ((999 -(915 + 82))^(90 -58))) + v42 ;local v46=v20(v43,13 + 8 ,(18 + 22) -9 );local v47=((v20(v43,32)==((2101 -913) -(1069 + 118))) and  -(2 -(439 -(145 + 293)))) or (1 -0) ;if (v46==(0 + 0)) then if (v45==0) then return v47 * (0 -0) ;else v46=1 + 0 ;v44=430 -(44 + 386) ;end elseif (v46==(2838 -(368 + 423))) then return ((v45==(0 -0)) and (v47 * (1/(18 -(10 + 8))))) or (v47 * NaN) ;end return v8(v47,v46-(3934 -2911) ) * (v44 + (v45/((444 -(416 + 26))^(165 -113)))) ;end local function v25(v48)local v49=1486 -(998 + (1347 -(814 + 45))) ;local v50;local v51;while true do if (v49==3) then return v6(v51);end if (v49==(0 + 0)) then v50=nil;if  not v48 then v48=v23();if (v48==0) then return "";end end v49=1 + 0 ;end if (v49==(774 -(201 + 571))) then v51={};for v87=1139 -(116 + (2517 -1495)) , #v50 do v51[v87]=v2(v1(v3(v50,v87,v87)));end v49=12 -(1 + 8) ;end if (v49==(1 + 0 + 0)) then v50=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;v49=7 -5 ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v52==0) then v53=0 -0 ;v54=nil;v52=2 -1 ;end if (v52~=1) then else v55=nil;v56=nil;v52=2;end if (v52~=3) then else v59=nil;while true do local v89=0 + 0 ;while true do if ((0 -0)==v89) then if (v53~=(1 + 2)) then else local v96=413 -(15 + 398) ;while true do if (v96~=0) then else for v101=1,v23() do v55[v101-(3 -2) ]=v28();end return v57;end end end if ((982 -(18 + 964))~=v53) then else v54={};v55={};v56={};v53=868 -(550 + 317) ;end v89=1;end if (v89~=1) then else if (v53==2) then local v97=0 -0 ;while true do if (v97==(0 -0)) then for v103=1 -0 ,v58 do local v104=0 + 0 ;local v105;local v106;local v107;while true do if (v104~=(2 -1)) then else v107=nil;while true do if (v105==(285 -(134 + 151))) then v106=v21();v107=nil;v105=851 -(20 + 830) ;end if ((1666 -(970 + 695))~=v105) then else if (v106==1) then v107=v21()~=(0 -0) ;elseif (v106==(1992 -(582 + 1408))) then v107=v24();elseif (v106~=(10 -7)) then else v107=v25();end v59[v103]=v107;break;end end break;end if ((0 -0)==v104) then v105=0 -0 ;v106=nil;v104=1;end end end v57[1827 -(1195 + 629) ]=v21();v97=127 -(116 + 10) ;end if (v97==(1 -0)) then for v108=242 -(187 + 54) ,v23() do local v109=738 -(542 + 196) ;local v110;local v111;while true do if ((0 -0)~=v109) then else local v143=780 -(162 + 618) ;while true do if (v143~=(1 + 0)) then else v109=1 + 0 ;break;end if (v143~=(0 + 0)) then else v110=0 -0 ;v111=nil;v143=1;end end end if (v109~=1) then else while true do if (v110==(0 + 0)) then v111=v21();if (v20(v111,1 -0 ,1)==0) then local v259=0 -0 ;local v260;local v261;local v262;local v263;local v264;local v265;while true do if (v259==(2 -1)) then v262=nil;v263=nil;v259=1553 -(1126 + 425) ;end if (v259==(1 + 1)) then v264=nil;v265=nil;v259=3;end if (v259==(0 -0)) then v260=1121 -(118 + 1003) ;v261=nil;v259=1637 -(1373 + 263) ;end if (v259==(380 -(142 + 235))) then while true do if (v260~=(1000 -(451 + 549))) then else v261=0 + 0 ;v262=nil;v260=1 -0 ;end if (v260~=(2 -0)) then else v265=nil;while true do if (v261==(1384 -(746 + 638))) then local v294=977 -(553 + 424) ;while true do if ((0 + 0)~=v294) then else v262=0 -0 ;v263=nil;v294=1 + 0 ;end if (v294==(1 + 0)) then v261=1 + 0 ;break;end end end if (v261~=(343 -(218 + 123))) then else while true do if (v262==(1 + 1)) then local v296=0 + 0 ;local v297;local v298;while true do if (v296~=(1582 -(1535 + 46))) then else while true do if (v297==(0 -0)) then v298=0 + 0 ;while true do if (v298==(0 + 0)) then local v307=0 + 0 ;while true do if (1~=v307) then else v298=561 -(306 + 254) ;break;end if (0~=v307) then else local v311=0;while true do if (v311==(1 + 0)) then v307=1 -0 ;break;end if (v311==(1467 -(899 + 568))) then if (v20(v264,1,1 + 0 )==(2 -1)) then v265[605 -(268 + 335) ]=v59[v265[292 -(60 + 230) ]];end if (v20(v264,2,1 + 1 )==(573 -(426 + 146))) then v265[1 + 2 ]=v59[v265[734 -(476 + 255) ]];end v311=1457 -(282 + 1174) ;end end end end end if ((812 -(569 + 242))==v298) then v262=3;break;end end break;end end break;end if (v296~=(1130 -(369 + 761))) then else v297=0 -0 ;v298=nil;v296=1 + 0 ;end end end if (v262==0) then local v299=1024 -(706 + 318) ;local v300;while true do if (v299~=(0 -0)) then else v300=238 -(64 + 174) ;while true do if (v300~=(1 + 0)) then else v262=1 -0 ;break;end if (v300==(336 -(144 + 192))) then v263=v20(v111,1253 -(721 + 530) ,219 -(42 + 174) );v264=v20(v111,1275 -(945 + 326) ,5 + 1 );v300=1 + 0 ;end end break;end end end if (v262==(2 -1)) then local v301=0 + 0 ;while true do if ((700 -(271 + 429))~=v301) then else local v305=0 + 0 ;while true do if (v305~=1) then else v301=1581 -(1183 + 397) ;break;end if (v305==(1500 -(1408 + 92))) then v265={v22(),v22(),nil,nil};if (v263==0) then local v306=0 + 0 ;while true do if (v306==(1171 -(418 + 753))) then v265[1936 -(565 + 1368) ]=v22();v265[2 + 2 ]=v22();break;end end elseif (v263==1) then v265[3]=v23();elseif (v263==2) then v265[1 + 2 ]=v23() -((1663 -(1477 + 184))^(21 -5)) ;elseif (v263~=(1 + 2)) then else local v313=0 + 0 ;local v314;local v315;while true do if (v313==(856 -(564 + 292))) then local v320=529 -(406 + 123) ;while true do if (v320==(2 -1)) then v313=1770 -(1749 + 20) ;break;end if (v320==0) then v314=0 + 0 ;v315=nil;v320=1;end end end if (v313~=(1 + 0)) then else while true do if (v314==(1322 -(1249 + 73))) then v315=476 -(41 + 435) ;while true do if ((1001 -(938 + 63))==v315) then v265[2 + 1 ]=v23() -((2 + 0)^(1161 -(466 + 679))) ;v265[1129 -(936 + 189) ]=v22();break;end end break;end end break;end end end v305=2 -1 ;end end end if (v301==1) then v262=1 + 1 ;break;end end end if (v262~=3) then else if (v20(v264,3,8 -5 )~=(1901 -(106 + 1794))) then else v265[2 + 2 ]=v59[v265[2 + 2 ]];end v54[v108]=v265;break;end end break;end if (v261==(2 -1)) then local v295=0 -0 ;while true do if (v295~=(114 -(4 + 110))) then else v264=nil;v265=nil;v295=585 -(57 + 527) ;end if (v295~=(1 -0)) then else v261=1429 -(41 + 1386) ;break;end end end end break;end if ((104 -(17 + 86))~=v260) then else local v290=0 + 0 ;while true do if (v290~=(1 -0)) then else v260=5 -3 ;break;end if (v290==(166 -(122 + 44))) then v263=nil;v264=nil;v290=1 -0 ;end end end end break;end end end break;end end break;end end end v53=9 -6 ;break;end end end if (v53==(3 -2)) then local v98=0;local v99;while true do if (v98~=(0 -0)) then else v99=0 + 0 ;while true do if (v99~=(1 + 0)) then else v59={};v53=3 -1 ;break;end if (v99==(65 -(30 + 35))) then v57={v54,v55,nil,v56};v58=v23();v99=3 -2 ;end end break;end end end break;end end end break;end if (v52==(1214 -(323 + 889))) then v57=nil;v58=nil;v52=3;end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v84=0,v74 do if (v84>=v68) then v72[v84-v68 ]=v73[v84 + 1 ];else v76[v84]=v73[v84 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v85=0;while true do if (v85==0) then v78=v66[v70];v79=v78[1];v85=1;end if (v85==1) then if (v79<=23) then if (v79<=11) then if (v79<=5) then if (v79<=2) then if (v79<=0) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==1) then local v162=v78[2];v76[v162]=v76[v162]();else for v219=v78[2],v78[3] do v76[v219]=nil;end end elseif (v79<=3) then v76[v78[2]][v78[3]]=v78[4];elseif (v79==4) then v76[v78[2]]=v78[3];else local v166=0;local v167;local v168;local v169;local v170;while true do if (0==v166) then v167=v78[2];v168,v169=v69(v76[v167](v13(v76,v167 + 1 ,v78[3])));v166=1;end if (2==v166) then for v266=v167,v71 do v170=v170 + 1 ;v76[v266]=v168[v170];end break;end if (v166==1) then v71=(v169 + v167) -1 ;v170=0;v166=2;end end end elseif (v79<=8) then if (v79<=6) then v76[v78[2]][v78[3]]=v78[4];elseif (v79==7) then v76[v78[2]]=v62[v78[3]];else local v173=v78[2];local v174={};for v221=1, #v75 do local v222=0;local v223;while true do if (v222==0) then v223=v75[v221];for v276=0, #v223 do local v277=v223[v276];local v278=v277[1];local v279=v277[2];if ((v278==v76) and (v279>=v173)) then local v286=0;while true do if (v286==0) then v174[v279]=v278[v279];v277[1]=v174;break;end end end end break;end end end end elseif (v79<=9) then do return;end elseif (v79==10) then local v175=v78[2];v76[v175]=v76[v175](v13(v76,v175 + 1 ,v71));else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79<=17) then if (v79<=14) then if (v79<=12) then local v116=v78[2];v76[v116]=v76[v116](v13(v76,v116 + 1 ,v78[3]));elseif (v79==13) then local v179=v78[2];local v180,v181=v69(v76[v179](v13(v76,v179 + 1 ,v78[3])));v71=(v181 + v179) -1 ;local v182=0;for v224=v179,v71 do local v225=0;while true do if (v225==0) then v182=v182 + 1 ;v76[v224]=v180[v182];break;end end end else local v183=v78[2];v76[v183]=v76[v183](v13(v76,v183 + 1 ,v71));end elseif (v79<=15) then local v118=0;local v119;while true do if (v118==0) then v119=v78[2];v76[v119](v13(v76,v119 + 1 ,v78[3]));break;end end elseif (v79>16) then local v185=0;local v186;local v187;while true do if (v185==1) then v76[v186 + 1 ]=v187;v76[v186]=v187[v78[4]];break;end if (v185==0) then v186=v78[2];v187=v76[v78[3]];v185=1;end end else local v188=0;local v189;local v190;while true do if (v188==0) then v189=v78[2];v190={};v188=1;end if (v188==1) then for v272=1, #v75 do local v273=v75[v272];for v280=0, #v273 do local v281=v273[v280];local v282=v281[1];local v283=v281[2];if ((v282==v76) and (v283>=v189)) then v190[v283]=v282[v283];v281[1]=v190;end end end break;end end end elseif (v79<=20) then if (v79<=18) then local v120=v78[2];local v121=v76[v78[3]];v76[v120 + 1 ]=v121;v76[v120]=v121[v78[4]];elseif (v79==19) then v76[v78[2]]=v76[v78[3]];else v76[v78[2]]=v62[v78[3]];end elseif (v79<=21) then v76[v78[2]]=v61[v78[3]];elseif (v79>22) then do return;end else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=35) then if (v79<=29) then if (v79<=26) then if (v79<=24) then v70=v78[3];elseif (v79>25) then v76[v78[2]][v78[3]]=v76[v78[4]];else local v199=v78[2];v76[v199]=v76[v199](v13(v76,v199 + 1 ,v78[3]));end elseif (v79<=27) then local v128=v67[v78[3]];local v129;local v130={};v129=v10({},{__index=function(v144,v145)local v146=0;local v147;while true do if (v146==0) then v147=v130[v145];return v147[1][v147[2]];end end end,__newindex=function(v148,v149,v150)local v151=v130[v149];v151[1][v151[2]]=v150;end});for v153=1,v78[4] do v70=v70 + 1 ;local v154=v66[v70];if (v154[1]==19) then v130[v153-1 ]={v76,v154[3]};else v130[v153-1 ]={v61,v154[3]};end v75[ #v75 + 1 ]=v130;end v76[v78[2]]=v29(v128,v129,v62);elseif (v79==28) then local v201=v78[2];v76[v201]=v76[v201]();else v70=v78[3];end elseif (v79<=32) then if (v79<=30) then for v156=v78[2],v78[3] do v76[v156]=nil;end elseif (v79>31) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v204=v78[2];local v205=v76[v204];local v206=v78[3];for v229=1,v206 do v205[v229]=v76[v204 + v229 ];end end elseif (v79<=33) then local v132=0;local v133;while true do if (v132==0) then v133=v78[2];v76[v133](v76[v133 + 1 ]);break;end end elseif (v79>34) then v76[v78[2]]();elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=41) then if (v79<=38) then if (v79<=36) then local v134=0;local v135;local v136;local v137;while true do if (v134==1) then v137={};v136=v10({},{__index=function(v240,v241)local v242=v137[v241];return v242[1][v242[2]];end,__newindex=function(v243,v244,v245)local v246=0;local v247;while true do if (v246==0) then v247=v137[v244];v247[1][v247[2]]=v245;break;end end end});v134=2;end if (v134==2) then for v248=1,v78[4] do v70=v70 + 1 ;local v249=v66[v70];if (v249[1]==19) then v137[v248-1 ]={v76,v249[3]};else v137[v248-1 ]={v61,v249[3]};end v75[ #v75 + 1 ]=v137;end v76[v78[2]]=v29(v135,v136,v62);break;end if (v134==0) then v135=v67[v78[3]];v136=nil;v134=1;end end elseif (v79>37) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]];end elseif (v79<=39) then v76[v78[2]]=v61[v78[3]];elseif (v79>40) then v76[v78[2]]=v76[v78[3]][v78[4]];else v76[v78[2]]=v78[3];end elseif (v79<=44) then if (v79<=42) then local v140=v78[2];local v141=v76[v140];local v142=v78[3];for v158=1,v142 do v141[v158]=v76[v140 + v158 ];end elseif (v79>43) then local v213=v78[2];v76[v213](v13(v76,v213 + 1 ,v78[3]));else v76[v78[2]]={};end elseif (v79<=46) then if (v79==45) then v76[v78[2]]();else v76[v78[2]]={};end elseif (v79==47) then local v216=v78[2];local v217=v76[v216];for v235=v216 + 1 ,v78[3] do v7(v217,v76[v235]);end else local v218=v78[2];v76[v218](v76[v218 + 1 ]);end v70=v70 + 1 ;break;end end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end